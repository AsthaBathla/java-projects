import java.util.*;
import java.lang.*;
import java.io.*;
public class Main

{
    static ArrayList<Integer> playerpositions = new ArrayList<Integer>();
    static ArrayList<Integer> cpupositions = new ArrayList<Integer>();
	public static void main(String[] args) {
		char[][] gameboard = {{' ', '|',' ','|',' '}, {'-', '+','-','+','-'},{' ', '|',' ','|',' '},{'-', '+','-','+','-'},
		{' ', '|',' ','|',' '}};
		
	    print_gb(gameboard);
	    while(true){
	    Scanner sc = new Scanner(System.in);
	    System.out.println("Enter the placement pos:");
	    int playerpos = sc.nextInt();
	    while((playerpositions.contains(playerpos))||(cpupositions.contains(playerpos)))
	    {
	        System.out.println("Positon taken! Enter a new Positon:");
	        playerpos = sc.nextInt();
	    }
	    placement_gb(gameboard , playerpos , "player");
	    print_gb(gameboard);
	    String result =  checkwinner() ;
	    if (result.length()>0){
	    System.out.println(result);
	        break;}
	    Random ran = new Random();
	    int cpupos = ran.nextInt(9)+1;
	    while((playerpositions.contains(cpupos))||(cpupositions.contains(cpupos)))
	    {
	       // System.out.println("Positon taken! Enter a new Positon:");
	        cpupos = ran.nextInt(9)+1;
	    }
	    placement_gb(gameboard , cpupos , "cpu");
	    print_gb(gameboard);
	    result =  checkwinner() ;
	    if (result.length()>0){
	    System.out.println(result);
	        break;
	    }
}
		
	}
	public static void print_gb(char[][] gameboard)
	{
	    for( char[] ch : gameboard)
		{
		    for( char c : ch)
		    {
		        System.out.print(c);
		    }
		    System.out.println();
		}
	}
	public static void placement_gb(char[][] gameboard , int pos , String user)
	{
	    char symbol = ' ';
	    if (user.equals("player")){symbol = 'X'; playerpositions.add(pos);}
	    else if (user.equals("cpu")) { symbol = 'O'; cpupositions.add(pos);}
	    switch(pos){
	        case 1: gameboard[0][0] = symbol;
	                break;
	        case 2: gameboard[0][2] = symbol;
	                break;
	        case 3: gameboard[0][4] = symbol;
	                break;
	        case 4: gameboard[2][0] = symbol;
	                break;
	        case 5: gameboard[2][2] = symbol;
	                break;
	        case 6: gameboard[2][4] = symbol;
	                break;
	        case 7: gameboard[4][0] = symbol;
	                break;
	        case 8: gameboard[4][2] = symbol;
	                break;
	        case 9: gameboard[4][4] = symbol;
	                break; 
	       default: break;
	    }
	}
	    
	    public static String checkwinner()
	    {
	        List top_r = Arrays.asList(1,2,3);
	        List mid_r = Arrays.asList(4,5,6);
	        List last_r = Arrays.asList(7,8,9);
	        List top_c = Arrays.asList(1,4,7);
	        List mid_c = Arrays.asList(2,5,8);
	        List last_c = Arrays.asList(3,6,9);
	        List cross1 = Arrays.asList(1,5,9);
	        List cross2 = Arrays.asList(7.5,3);
	 
	        List<List> winning = new ArrayList<List>();
	        winning.add(top_r);
	        winning.add(mid_r);
	        winning.add(last_r);
	        winning.add(top_c);
	        winning.add(mid_c);
	        winning.add(last_c);
	        winning.add(cross1);
	        winning.add(cross2);
	        
	        for ( List l : winning){
	            if(playerpositions.containsAll(l))
	            {
	                return "Congratulations!! <3";
	            }
	            else if(cpupositions.containsAll(l))
	            {
	                return "Sorry love! You lost :(";
	            }
	            else if((playerpositions.size()+ cpupositions.size())== 9)
	            {
	                return "CATT";
	            }
	        }
	        
	        
	        return "";
	    }
	                
	
	    
	
}